# -*- coding: utf-8 -*-
"""Internal_Assessment2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VtAo8ix-9wd892FXephzjuuKzEUTFMby
"""

import numpy as np
import pandas as pd

#1
a = np.array([5,6,7,10,9,3,12])
b = np.sum(a)
c = np.min(a)
d = np.max(a)
e = np.mean(a)
f = np.std(a)
print(a)
print("Min : {}".format(c))
print("Max : {}".format(d))
print("Sum : {}".format(b))
print("Mean : {}".format(e))
print("Standard Deviation : {}".format(d))

#2
health_data = np.array([[160, 70, 30],   # height, weight, age for individual 1
                        [165, 65, 35],   # height, weight, age for individual 2
                        [170, 75, 40]])  # height, weight, age for individual 3
health_data = health_data.transpose()
mean = []
std = []
for i in range(len(health_data)):
  a = np.mean(health_data[i])
  mean.append(a)
  b = np.std(health_data[i])
  std.append(b)
mean = np.array(mean)
std = np.array(std)
print("Mean : {}".format(mean))
print("Standard Deviation : {}".format(std))

#3
score = np.array([[8,7,9,7,10],
         [4,7,6,5,3],
         [9,8,9,10,10],
         [6,6,7,5,-1]])
score = score.transpose()
mean=np.mean(score[:3][:])
print(mean)

#4
temperature = np.linspace(15,25,24)
print(temperature)

#5
import numpy as np
daily_closing_prices = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
window_size = 5

df= pd.DataFrame(daily_closing_prices,columns=['price'])
df
ans =df['price'].rolling(window=5).mean()
ans.reset_index()
print(ans)

#6
NA

#7
import numpy as np
properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])
print(properties_matrix*properties_matrix)

#8
arr = np.array([[1, 2, 3],[4, 5, 6],[7, 8, 9]])
i = np.where(arr>5)
arr[i]

#9
data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}

df = pd.DataFrame(data)
ans = df[(df['Age'] < 45)&(df['Department'] != 'HR')][['Name','City']]
print(ans)

#10
data = {'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]}


df = pd.DataFrame(data)
ans = df.groupby(['Salesperson','Department']).mean()
ans = ans.sort_values('Sales',ascending = False)
print(ans)

#11
data = {
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]
}
df = pd.DataFrame(data)
ans = df.groupby(['Category'])['Price'].mean()
ans = ans.reset_index()
avg = ans[(ans['Category'] == 'Fruit')]['Price']
out = df[(df['Price'] > 2.2) & (df['Promotion'] == False)]
out

#12
employee_data = {
    'Employee': ['Alice', 'Bob', 'Charlie', 'David'],
    'Department': ['HR', 'IT', 'Finance', 'IT'],
    'Manager': ['John', 'Rachel', 'Emily', 'Rachel']
}

# Dataset of employee project assignments
project_data = {
    'Employee': ['Alice', 'Charlie', 'Eve'],
    'Project': ['P1', 'P3', 'P2']
}

df1 = pd.DataFrame(employee_data)
df2 = pd.DataFrame(project_data)

df = df1.set_index('Employee').join(df2.set_index('Employee'))
print(df)

#13
df = pd.read_csv('/content/Q13_sports_team_stats.csv')
df['Winratio']=(df['GamesPlayed']*df['Wins']/100)
df= df.groupby(['TeamID']).mean()
print(df)

#14
df = pd.read_csv('/content/Q14_customer_purchases.csv')
ans = df.groupby(['CustomerID','Date'])['PurchaseAmount'].count()
print(ans)

#15
df = pd.read_csv('/content/Q15_student_grades.csv')
df = df.groupby(['StudentID','Subject'])['Grade'].mean()
print(df)

