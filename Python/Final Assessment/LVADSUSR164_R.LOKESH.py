# -*- coding: utf-8 -*-
"""Final_Assessment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FibvfiK9qBMVgUyl3nl4KhCjclsM55eD
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#1.a
df = pd.read_csv('/content/Final Dataset - IPL.csv')

#1.b
print("Top 5 : \n",df.head(5))
print("Last 5 : \n",df.tail(5))
print("Describe : \n",df.describe())
print("Info : \n",df.info())
print("Columns : \n",df.columns)
if df.isna().any().any():
  print("There are missing values")
else:
  print("There are no missing values")

#2 Missing and duplicate values
if df.isna().any().any():
  print("There are missing values")
  df.fillna('-')
  print("Missing values has been handled")
else:
  print("There are no missing values")
if df.duplicated().any():
  print("Duplicates has been present")
  df.drop_duplicates()
else:
  print("No duplicates in the given data")

#3
print(" Mean : \n",df[['first_ings_score','first_ings_wkts','second_ings_score','second_ings_wkts','highscore']].mean())
print("\n Median : \n",df[['first_ings_score','first_ings_wkts','second_ings_score','second_ings_wkts','highscore']].median())
print("\n Mode : \n",df[['first_ings_score','first_ings_wkts','second_ings_score','second_ings_wkts','highscore']].mode().iloc[0])
print("\n Range : \n",(df[['first_ings_score','first_ings_wkts','second_ings_score','second_ings_wkts','highscore']].max() - df[['first_ings_score','first_ings_wkts','second_ings_score','second_ings_wkts','highscore']].min()))
print("\n Variance : \n",df[['first_ings_score','first_ings_wkts','second_ings_score','second_ings_wkts','highscore']].var())
print("\n Standard : \n",df[['first_ings_score','first_ings_wkts','second_ings_score','second_ings_wkts','highscore']].std())

sns.set_style("darkgrid",{"gridlines":0.5,"gridcolor":'grey'})

#4
plt.figure(figsize=(8,8))
b = df.groupby('team1')['first_ings_score'].sum()
plt.title("Total Runs By team 1")
plt.xlabel("Team")
plt.ylabel("Runs")
sns.barplot(data=b)

plt.figure(figsize=(8,8))
b = df.groupby('team2')['second_ings_score'].sum()
plt.title("Total Runs By team 2")
plt.xlabel("Team")
plt.ylabel("Runs")
sns.barplot(data=b)

a = df.groupby('margin')['match_id'].count().reset_index()
sns.scatterplot(data = a, x ='match_id',y='margin')
plt.title("Total Margin")
plt.xlabel("Count")
plt.ylabel("Runs")

from matplotlib import pyplot as plt
import seaborn as sns
df.groupby('venue').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))
plt.gca().spines[['top', 'right',]].set_visible(False)
plt.title("Most matches held in")

#5
a = df[['first_ings_score','second_ings_score','margin']].corr()
sns.heatmap(a,annot=True, fmt='.2g')
plt.title("Correlation between data")

#6
a = df[['first_ings_score','second_ings_score','margin']]
sns.boxplot(a)
plt.title("Outliers")

#7
a = df.groupby(['venue','player_of_the_match'])['match_id'].count().reset_index().sort_values(by='match_id',ascending=False).head(10)
plt.figure(figsize=(13,5))
sns.barplot(x='player_of_the_match',hue='venue',data=a,y='match_id',palette="husl")
plt.title('Most player of the match on single stadium')

#8
a = df[((df['player_of_the_match']) == (df['top_scorer']))]
a1 = a['match_id'].count()
b = df[((df['player_of_the_match']) == (df['best_bowling']))]
b1 = b['match_id'].count()
c = {'batsmen':int(a['match_id'].count()),'Bowler':int(b['match_id'].count())}
c = pd.DataFrame.from_dict(c,orient='index',columns=['count']).reset_index()
sns.barplot(data=c,x='index',y='count',palette="husl",legend=False)
plt.title('Comparision between Top scorer and Best Bowling on winning matches')
plt.xlabel('Player Type')
plt.ylabel('Total count')

a = df[((df['player_of_the_match']) == (df['top_scorer']))]
a1 = a.groupby('top_scorer')['player_of_the_match'].agg(Count=('count')).reset_index().sort_values(by='Count',ascending=False).head(5)
b = df[((df['player_of_the_match']) == (df['best_bowling']))]
b1 = b.groupby('best_bowling')['player_of_the_match'].agg(Count=('count')).reset_index().sort_values(by='Count',ascending=False).head(5)
c = pd.concat([a1,b1],axis=0)
plt.figure(figsize=(13,5))
sns.lineplot(data=c,x='top_scorer',y='Count',marker='*',markersize=8)
sns.lineplot(data=c,x='best_bowling',y='Count',marker="*",markersize=8)
plt.title("Top Batsmen and Bowler Comparision")
plt.xlabel("Top players")

#9
''' From the above bar chart we can see that when the batter performs well the winning percentage of the match is high compared to the team winning when bowlers get the players of the match, but in the next line chart we can see that there are many individual bowlers who got more player of the match compared to batsmen from this we can see that many batsmen well then teh bowlers and they are more crucial to win the match.'''