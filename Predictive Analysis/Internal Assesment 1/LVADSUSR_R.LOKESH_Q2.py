# -*- coding: utf-8 -*-
"""Predictive_Internal1_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16hDFibpOyvwlgbR7ZAmMj-6D1UIM8CjD
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import MinMaxScaler,StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression, LogisticRegression
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix, classification_report,r2_score,mean_squared_error

df= pd.read_csv('/content/booking.csv')

df.head()

df.info()

df.describe(include='all')

df.isnull().sum()

df.duplicated().value_counts()

df['room type'].value_counts()

df['room type'] = df['room type'].fillna(value = df['room type'].mode()[0])

df['average price'] = df['average price'].fillna(value  = df['average price'].mean())

df.isnull().sum()

df.info()

df.head()

df.drop(columns=['Booking_ID'])

colum =['type of meal','room type','market segment type']
for col in colum:
  df[col].value_counts().plot(kind='bar')
  plt.title(f'Bar Plot of {col}')
  plt.xlabel(col)
  plt.show()

colum =['number of weekend nights',	'number of week nights', 'booking status']
for col in colum:
  df[col].value_counts().plot(kind='pie')
  plt.title(f'Pie Plot of {col}')
  plt.xlabel(col)
  plt.show()

edf = df.copy()

l = LabelEncoder()
colum = edf.select_dtypes(include = ['object']).columns
for col in colum:
  edf[col] = l.fit_transform(edf[col])

edf.head()

plt.figure(figsize=(15,12))
sns.heatmap(edf.corr(),annot=True)

X = edf.drop(columns = ['booking status'])
Y= edf['booking status']

x_train ,x_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=102)

scaler = MinMaxScaler()
x_train=scaler.fit_transform(x_train)
x_test=scaler.transform(x_test)

model = LogisticRegression()
model.fit(x_train,y_train)
y_pred = model.predict(x_test)

print("Confusion Matrix:",confusion_matrix(y_pred,y_test))
print("Classification Report:",classification_report(y_pred,y_test))

print("Accuracy:",accuracy_score(y_pred,y_test))
print("Recall Score:",recall_score(y_pred,y_test))
print("Precision:",precision_score(y_pred,y_test))
print("F1 Score:",f1_score(y_pred,y_test))

