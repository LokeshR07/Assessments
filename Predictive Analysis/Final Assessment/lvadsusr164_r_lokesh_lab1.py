# -*- coding: utf-8 -*-
"""LVADSUSR164_R_LOKESH_LAB1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ANEGrMPJWvGPcZqJtFVdIT91GA1OQruK
"""

#lib
import numpy as np
import pandas as pd
import re
import seaborn as sns
import matplotlib.pyplot as plt
import warnings
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, MinMaxScaler
from sklearn.preprocessing import OneHotEncoder, LabelEncoder
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score, mean_squared_error
warnings.filterwarnings('ignore')

df = pd.read_csv('/content/Fare prediction.csv')

df.head()

df.info()

df.shape

df.describe()

df.isnull().sum()

df.duplicated().sum()

df = df.drop(columns=['key','pickup_datetime'])

for col in ['fare_amount','passenger_count']:
  plt.figure(figsize=(10, 5))
  sns.histplot(df[col])
  plt.title(f'Histogram of {col}')
  plt.xlabel(col)
  plt.ylabel('Frequency')
  plt.show()

plt.figure(figsize=(10,5))
sns.heatmap(df.corr(),annot=True)

plt.figure(figsize=(10,5))
sns.boxplot(df)

df1 = df.select_dtypes(include=['float64', 'int64'])
q1 = df1.quantile(0.25)
q3 = df1.quantile(0.75)
IQR = q3 - q1
outliers = ((df1 < (q1 - 1.5*IQR)) | (df1 > (q3 + 1.5*IQR))).any(axis=1)
df = df[~outliers]
df.head()

X = df.drop(columns = ['fare_amount'])
Y = df['fare_amount']

X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.2, random_state=102)

S = MinMaxScaler()
X_train = S.fit_transform(X_train)
X_test = S.transform(X_test)

model= LinearRegression()
model.fit(X_train,y_train)

y_pred = model.predict(X_test)

y_pred

mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)
rmse = mean_squared_error(y_test, y_pred,squared=False)
print("Root Mean Squared Error:", rmse)
print("Coefficients:", model.coef_)
print("Intercept:", model.intercept_)
r2_s = r2_score(y_test, y_pred)
print("R2 Score:", r2_s)

