# -*- coding: utf-8 -*-
"""LVADSUSR_R_LOKESH_LAB4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uRw7ynGpGY9OomnJNSKn5_-epg4c-bM5
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.ensemble import RandomForestClassifier,IsolationForest
from sklearn.preprocessing import LabelEncoder

df = pd.read_csv('/content/anomaly_train.csv')

df.head()

df.shape

df.info()

df.isnull().sum()

df.duplicated().sum()

for column in df.select_dtypes(include=['object']).columns:
    plt.figure(figsize=(10, 5))
    df[column].value_counts().plot(kind='bar')
    plt.title(f'Bar Chart of {column}')
    plt.xlabel(column)
    plt.ylabel('Count')
    plt.show()

df1 = df.drop(columns=['TransactionID','User','Time','Type'])

L = LabelEncoder()
df1['Location'] = L.fit_transform(df1['Location'])

sns.heatmap(df1.corr(),annot=True)

model = IsolationForest(n_estimators= 100, max_samples =1000)

model.fit(df1)

df['anomoly_score'] = model.decision_function(df1)
df['anomaly'] = model.predict(df1)

df['anomaly'].value_counts()

plt.figure()
plt.hist(df['anomoly_score'], bins=50, density=True, alpha=0.7, color='blue', label='Anomaly Scores')
plt.xlabel('Anomaly Score')
plt.ylabel('Density')
plt.title('Distribution of Anomaly Scores')
plt.legend()
plt.show()

plt.figure(figsize=(8, 6))
scatter = plt.scatter(df['Amount'], df['anomoly_score'], c=df['anomaly'], cmap='viridis')
plt.colorbar(scatter,label='Anomaly Label')
plt.title('Anomalies Detected by Isolation Forest')
plt.xlabel('Amount')
# plt.ylabel('Num Comments')
plt.legend(handles=scatter.legend_elements()[0], labels=['Normal', 'Anomaly'], loc='upper right')
plt.show()



